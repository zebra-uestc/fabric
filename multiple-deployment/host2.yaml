# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

version: '2'

volumes:
  orderer1.example.com:
  orderer2.example.com:
  orderer3.example.com:
  peer0.org2.example.com:
  # peer1.org2.example.com:
  cli1:
  # cli2:
networks:
  testRadt: 

services:

  orderer1.example.com:
    container_name: orderer1.example.com
    image: hyperledger/fabric-orderer
    environment:
      - FABRIC_LOGGING_SPEC=DEBUG
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_BOOTSTRAPMETHOD=file
      - ORDERER_GENERAL_BOOTSTRAPFILE=/var/hyperledger/orderer/orderer.genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
        - ./channel-artifacts/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
        - ./crypto-config/ordererOrganizations/example.com/orderers/orderer1.example.com/msp:/var/hyperledger/orderer/msp
        - ./crypto-config/ordererOrganizations/example.com/orderers/orderer1.example.com/tls/:/var/hyperledger/orderer/tls
        - orderer1.example.com:/var/hyperledger/production/orderer
    ports:
      - 7050:7050
    networks:
      - testRadt
    extra_hosts:
      - "orderer.example.com:10.206.0.10"
      - "orderer1.example.com:10.206.0.8"
      - "orderer2.example.com:10.206.0.8"
      - "orderer3.example.com:10.206.0.8"
      - "orderer4.example.com:10.206.0.5"
      - "orderer5.example.com:10.206.0.5"
      - "orderer6.example.com:10.206.0.5"
      - "orderer7.example.com:10.206.0.17"
      - "orderer8.example.com:10.206.0.17"
      - "orderer9.example.com:10.206.0.17"
      - "peer0.org1.example.com:10.206.0.10"
      - "peer0.org2.example.com:10.206.0.8"

  orderer2.example.com:
    container_name: orderer2.example.com
    image: hyperledger/fabric-orderer
    environment:
      - FABRIC_LOGGING_SPEC=DEBUG
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_BOOTSTRAPMETHOD=file
      - ORDERER_GENERAL_BOOTSTRAPFILE=/var/hyperledger/orderer/orderer.genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
        - ./channel-artifacts/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
        - ./crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/msp:/var/hyperledger/orderer/msp
        - ./crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/tls/:/var/hyperledger/orderer/tls
        - orderer2.example.com:/var/hyperledger/production/orderer
    ports:
      - 8050:7050
    networks:
      - testRadt
    extra_hosts:
      - "orderer.example.com:10.206.0.10"
      - "orderer1.example.com:10.206.0.8"
      - "orderer2.example.com:10.206.0.8"
      - "orderer3.example.com:10.206.0.8"
      - "orderer4.example.com:10.206.0.5"
      - "orderer5.example.com:10.206.0.5"
      - "orderer6.example.com:10.206.0.5"
      - "orderer7.example.com:10.206.0.17"
      - "orderer8.example.com:10.206.0.17"
      - "orderer9.example.com:10.206.0.17"
      - "peer0.org1.example.com:10.206.0.10"
      - "peer0.org2.example.com:10.206.0.8"      

  orderer3.example.com:
    container_name: orderer3.example.com
    image: hyperledger/fabric-orderer
    environment:
      - FABRIC_LOGGING_SPEC=DEBUG
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_BOOTSTRAPMETHOD=file
      - ORDERER_GENERAL_BOOTSTRAPFILE=/var/hyperledger/orderer/orderer.genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
        - ./channel-artifacts/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
        - ./crypto-config/ordererOrganizations/example.com/orderers/orderer3.example.com/msp:/var/hyperledger/orderer/msp
        - ./crypto-config/ordererOrganizations/example.com/orderers/orderer3.example.com/tls/:/var/hyperledger/orderer/tls
        - orderer3.example.com:/var/hyperledger/production/orderer
    ports:
      - 9050:7050
    networks:
      - testRadt
    extra_hosts:
      - "orderer.example.com:10.206.0.10"
      - "orderer1.example.com:10.206.0.8"
      - "orderer2.example.com:10.206.0.8"
      - "orderer3.example.com:10.206.0.8"
      - "orderer4.example.com:10.206.0.5"
      - "orderer5.example.com:10.206.0.5"
      - "orderer6.example.com:10.206.0.5"
      - "orderer7.example.com:10.206.0.17"
      - "orderer8.example.com:10.206.0.17"
      - "orderer9.example.com:10.206.0.17"
      - "peer0.org1.example.com:10.206.0.10"
      - "peer0.org2.example.com:10.206.0.8"
      
  peer0.org2.example.com:
    container_name: peer0.org2.example.com
    image: hyperledger/fabric-peer
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.org2.example.com
      - CORE_PEER_ADDRESS=peer0.org2.example.com:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_CHAINCODEADDRESS=peer0.org2.example.com:7052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org2.example.com:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org2.example.com:7051
      - CORE_PEER_LOCALMSPID=Org2MSP
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # Allow more time for chaincode container to build on install.
      - CORE_CHAINCODE_EXECUTETIMEOUT=300s
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    volumes:
       - /var/run/:/host/var/run/
       - ./crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/msp:/etc/hyperledger/fabric/msp
       - ./crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls:/etc/hyperledger/fabric/tls
    ports:
      - 7051:7051
      - 7052:7052
      - 7053:7053
    networks:
      - testRadt
    extra_hosts:
      - "orderer.example.com:10.206.0.10"
      - "orderer1.example.com:10.206.0.8"
      - "orderer2.example.com:10.206.0.8"
      - "orderer3.example.com:10.206.0.8"
      - "orderer4.example.com:10.206.0.5"
      - "orderer5.example.com:10.206.0.5"
      - "orderer6.example.com:10.206.0.5"
      - "orderer7.example.com:10.206.0.17"
      - "orderer8.example.com:10.206.0.17"
      - "orderer9.example.com:10.206.0.17"
      - "peer0.org1.example.com:10.206.0.10"
      - "peer0.org2.example.com:10.206.0.8"
  # peer1.org2.example.com:
  #   container_name: peer1.org2.example.com
  #   image: hyperledger/fabric-peer
  #   environment:
  #     - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
  #     - CORE_PEER_ID=peer1.org2.example.com
  #     - CORE_PEER_ADDRESS=peer1.org2.example.com:8051
  #     - CORE_PEER_LISTENADDRESS=0.0.0.0:8051
  #     - CORE_PEER_CHAINCODEADDRESS=peer1.org2.example.com:8052
  #     - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:8052
  #     - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.org2.example.com:8051
  #     - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.org2.example.com:8051
  #     - CORE_PEER_LOCALMSPID=Org2MSP
  #     - FABRIC_LOGGING_SPEC=INFO
  #     - CORE_PEER_TLS_ENABLED=true
  #     - CORE_PEER_GOSSIP_USELEADERELECTION=true
  #     - CORE_PEER_GOSSIP_ORGLEADER=false
  #     - CORE_PEER_PROFILE_ENABLED=true
  #     - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
  #     - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
  #     - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
  #     # Allow more time for chaincode container to build on install.
  #     - CORE_CHAINCODE_EXECUTETIMEOUT=300s
  #   working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
  #   command: peer node start
  #   volumes:
  #      - /var/run/:/host/var/run/
  #      - ./crypto-config/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/msp:/etc/hyperledger/fabric/msp
  #      - ./crypto-config/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/tls:/etc/hyperledger/fabric/tls
  #   ports:
  #     - 8051:8051
  #     - 8052:8052
  #     - 8053:8053
  #   networks:
  #     - testRadt
  #   extra_hosts:
  #     - "orderer.example.com:10.206.0.10"
  #     - "orderer1.example.com:10.206.0.8"
  #     - "orderer2.example.com:10.206.0.8"
  #     - "orderer3.example.com:10.206.0.8"
  #     - "orderer4.example.com:10.206.0.5"
  #     - "orderer5.example.com:10.206.0.5"
  #     - "orderer6.example.com:10.206.0.5"
  #     - "orderer7.example.com:10.206.0.17"
  #     - "orderer8.example.com:10.206.0.17"
  #     - "orderer9.example.com:10.206.0.17"

  cli1:
    container_name: cli1
    image: hyperledger/fabric-tools
    tty: true
    stdin_open: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      #- FABRIC_LOGGING_SPEC=DEBUG
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_ID=cli1
      - CORE_PEER_ADDRESS=peer0.org2.example.com:7051
      - CORE_PEER_LOCALMSPID=Org2MSP
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
        - /var/run/:/host/var/run/
        - ./chaincode/go/:/opt/gopath/src/github.com/hyperledger/multiple-deployment/chaincode/go
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
        - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
    networks:
      - testRadt
      
    extra_hosts:
      - "orderer.example.com:10.206.0.10"
      - "orderer1.example.com:10.206.0.8"
      - "orderer2.example.com:10.206.0.8"
      - "orderer3.example.com:10.206.0.8"
      - "orderer4.example.com:10.206.0.5"
      - "orderer5.example.com:10.206.0.5"
      - "orderer6.example.com:10.206.0.5"
      - "orderer7.example.com:10.206.0.17"
      - "orderer8.example.com:10.206.0.17"
      - "orderer9.example.com:10.206.0.17"
      - "peer0.org1.example.com:10.206.0.10"
      # - "peer1.org1.example.com:10.206.0.10"
      - "peer0.org2.example.com:10.206.0.8"
      # - "peer1.org2.example.com:10.206.0.8"
  # cli2:
  #   container_name: cli2
  #   image: hyperledger/fabric-tools
  #   tty: true
  #   stdin_open: true
  #   environment:
  #     - GOPATH=/opt/gopath
  #     - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
  #     #- FABRIC_LOGGING_SPEC=DEBUG
  #     - FABRIC_LOGGING_SPEC=INFO
  #     - CORE_PEER_ID=cli2
  #     - CORE_PEER_ADDRESS=peer1.org2.example.com:8051
  #     - CORE_PEER_LOCALMSPID=Org2MSP
  #     - CORE_PEER_TLS_ENABLED=true
  #     - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/tls/server.crt
  #     - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/tls/server.key
  #     - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/tls/ca.crt
  #     - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp
  #   working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
  #   command: /bin/bash
  #   volumes:
  #       - /var/run/:/host/var/run/
  #       - ./chaincode/go/:/opt/gopath/src/github.com/hyperledger/multiple-deployment/chaincode/go
  #       - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
  #       - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
  #   networks:
  #     - testRadt
  #   extra_hosts:
  #     - "orderer.example.com:10.206.0.10"
  #     - "orderer1.example.com:10.206.0.8"
  #     - "orderer2.example.com:10.206.0.8"
  #     - "orderer3.example.com:10.206.0.8"
  #     - "orderer4.example.com:10.206.0.5"
  #     - "orderer5.example.com:10.206.0.5"
  #     - "orderer6.example.com:10.206.0.5"
  #     - "orderer7.example.com:10.206.0.17"
  #     - "orderer8.example.com:10.206.0.17"
  #     - "orderer9.example.com:10.206.0.17"
  #     - "peer0.org1.example.com:10.206.0.10"
  #     - "peer1.org1.example.com:10.206.0.10"
  #     - "peer0.org2.example.com:10.206.0.8"
  #     - "peer1.org2.example.com:10.206.0.8"